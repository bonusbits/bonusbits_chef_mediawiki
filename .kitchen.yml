---

# YAML Anchors - Shared Values
anchors:
  # AWS Account
  aws_tag_owner: &aws_tag_owner <%= ENV.fetch('USER', 'bonusbits') %>

platforms:
  # AWS AMI/EC2 Platforms
  - name: amazon-linux1-ami
    driver:
      image_search:
        owner-id: 137112412989
        name: amzn-ami-hvm-2018.03.0.20190826-x86_64-gp2
      tags:
        Created-By: Test Kitchen
        OS: Amazon v1
        Owner: *aws_tag_owner

  - name: amazon-linux2-ami
    driver:
      image_search:
        owner-id: 137112412989
        name: amzn2-ami-hvm-2.0.20190823.1-x86_64-gp2
      tags:
        Created-By: Test Kitchen
        OS: Amazon v2
        Owner: *aws_tag_owner
      # user_data: *bootstrap_lnx

  # Docker Platforms
  - name: amazon-linux1-docker
    driver:
      forward:
        - 8080:80
        - 4433:443
      # Amazon Linux AMI 2018.03 (v1 - el6)
      # https://hub.docker.com/_/amazonlinux
      # image: amazonlinux:1-with-sources
      image: amazonlinux:2018.03.0.20190826-with-sources
      platform: rhel
      provision_command:
        - yum -y install upstart procps util-linux

  - name: amazon-linux2-docker
    driver:
      forward:
        - 8081:80
        - 4434:443
      # SystemD Privilege workaround
      privileged: true
      run_command: /usr/sbin/init
      # Amazon Linux AMI 2018.03 (v2 - el7 - systemd)
      # https://hub.docker.com/_/amazonlinux
      image: amazonlinux:2.0.20190823.1-with-sources
      platform: rhel # Still needed Test Kitchen v2.3.3 for Amazon Linux
      provision_command:
        - yum -y install procps util-linux

provisioner:
  data_bags_path: "test/data_bags"
  environments_path: "test/environments"
  name: chef_zero
  product_name: chefdk
  product_version: 4.5.0
  roles_path: "test/roles"
  <% if ENV['USER'] == 'levon' %>
  encrypted_data_bag_secret_key_path: <%= ENV['HOME'] %>/.chef/encrypted_data_bag_secret
  <% else %>
  encrypted_data_bag_secret_key_path: test/data_bags/encrypted_data_bag_secret
  <% end %>
  client_rb:
    <% if ENV['USER'] == 'levon' %>
    environment: bonusbits_dev
    <% else %>
    environment: kitchen
    <% end %>

suites:
  - name: docker
    attributes:
      <% if ENV['CIRCLECI'] %>
      bonusbits_base:
        deployment_location: 'circleci'
      <% end %>
    run_list:
      - role[bonusbits_mediawiki]
    driver:
      name: docker
      use_sudo: false
      ssl_verify_mode: ":verify_none"
    includes: [ "amazon-linux1-docker" ]

  - name: ec2
    run_list:
      - role[bonusbits_mediawiki]
    driver:
      name: ec2
      associate_public_ip: <%= ENV.fetch('AWS_PUBLIC_IP', 'false') %>
      aws_ssh_key_id: <%= ENV.fetch('AWS_SSH_KEY_ID', 'bonusbits_dev_key') %>
      iam_profile_name: <%= ENV.fetch('AWS_IAM_INSTANCE_PROFILE_1', 'Linux-Instance_Role') %>
      instance_initiated_shutdown_behavior: terminate
      security_group_ids:
      <% (1..5).collect { |n| ENV["AWS_SECURITY_GROUP_#{n}"] }.compact.each do |secgroup| %>
      - <%= secgroup %>
      <% end %>
      subnet_id: <%= ENV.fetch('AWS_SUBNET_ID', 'subnet-00000000') %>
      vpc_id: <%= ENV.fetch('AWS_VPC_ID', 'vpc-00000000') %>
      region: <%= ENV.fetch('AWS_REGION', 'us-west-2') %>
      instance_type: t3.small
      tags:
        Name: kitchen-bonusbits-web-<%= ENV['USER'] %>
        Created-By: Test Kitchen
        Owner: <%= ENV['USER'] %>
    includes: [ "amazon-linux1-ami" ]
    transport:
      username: ec2-user
      ssh_key: <%= ENV.fetch('AWS_SSH_KEY_PATH', ENV['HOME'] + "/.ssh/bonusbits_dev_key.pem") %>

verifier:
  inputs:
    debug: true
    test_chef: true
    chef_client_version: '15.4.45'
    chef_dk_version: '4.5.0'
  inspec_tests:
    - name: bonusbits_base
      git: https://github.com/bonusbits/inspec_bonusbits_base.git
      release: 2.1.0
    - path: test/inspec/profiles/bonusbits_mediawiki
  name: inspec
  reporter:
    - cli
  <% if ENV['CI'] %>
  - junit:reports/integration/%{platform}_%{suite}_inspec.xml
  <% end %>
