<?php
# This file was automatically generated by the MediaWiki 1.20.0
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# http://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}

## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename      = "<%= node['bonusbits_mediawiki_nginx']['mediawiki']['localsettings']['wgSitename'] %>";
$wgMetaNamespace = "<%= node['bonusbits_mediawiki_nginx']['mediawiki']['localsettings']['wgMetaNamespace'] %>";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## http://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath       = "<%= node['bonusbits_mediawiki_nginx']['mediawiki']['localsettings']['wgScriptPath'] %>";
$wgArticlePath       = "<%= node['bonusbits_mediawiki_nginx']['mediawiki']['localsettings']['wgArticlePath'] %>";
$wgUsePathInfo = <%= node['bonusbits_mediawiki_nginx']['mediawiki']['localsettings']['wgUsePathInfo'] %>;
$wgScriptExtension  = ".php";

## The protocol and server name to use in fully-qualified URLs
$wgServer           = "<%= node['bonusbits_mediawiki_nginx']['mediawiki']['localsettings']['wgServer'] %>";

## The relative URL path to the skins directory
$wgStylePath        = "$wgScriptPath/skins";

## The relative URL path to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogo             = "<%= node['bonusbits_mediawiki_nginx']['mediawiki']['localsettings']['wgLogo'] %>";

## UPO means: this is also a user preference option

$wgEnableEmail      = <%= node['bonusbits_mediawiki_nginx']['mediawiki']['localsettings']['wgEnableEmail'] %>;
$wgEnableUserEmail  = <%= node['bonusbits_mediawiki_nginx']['mediawiki']['localsettings']['wgEnableUserEmail'] %>; # UPO

$wgEmergencyContact = "<%= node['bonusbits_mediawiki_nginx']['mediawiki']['localsettings']['wgEmergencyContact'] %>";
$wgPasswordSender   = "<%= node['bonusbits_mediawiki_nginx']['mediawiki']['localsettings']['wgPasswordSender'] %>";

$wgEnotifUserTalk      = false; # UPO
$wgEnotifWatchlist     = false; # UPO
$wgEmailAuthentication = <%= node['bonusbits_mediawiki_nginx']['mediawiki']['localsettings']['wgEmailAuthentication'] %>;

## Database settings
$wgDBtype           = "<%= node['bonusbits_mediawiki_nginx']['mediawiki']['localsettings']['wgDBtype'] %>";
$wgDBserver         = "<%= node['bonusbits_mediawiki_nginx']['mediawiki']['localsettings']['wgDBserver'] %>";
$wgDBname           = "<%= node['bonusbits_mediawiki_nginx']['mediawiki']['localsettings']['wgDBname'] %>";
$wgDBuser           = "<%= node['bonusbits_mediawiki_nginx']['mediawiki']['localsettings']['wgDBuser'] %>";
$wgDBpassword       = "<%= node.run_state['passwords']['wiki']['wgDBpassword'] %>";

# MySQL specific settings
$wgDBprefix = "<%= node['bonusbits_mediawiki_nginx']['mediawiki']['localsettings']['wgDBprefix'] %>";

# MySQL table options to use during installation or update
$wgDBTableOptions   = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Experimental charset support for MySQL 5.0.
$wgDBmysql5 = true;

## Shared memory settings
#$wgMainCacheType    = CACHE_NONE;
#$wgMemCachedServers = array();

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads  = <%= node['bonusbits_mediawiki_nginx']['mediawiki']['localsettings']['wgEnableUploads'] %>;
$wgUseImageMagick = <%= node['bonusbits_mediawiki_nginx']['mediawiki']['localsettings']['wgUseImageMagick'] %>;
$wgImageMagickConvertCommand = "<%= node['bonusbits_mediawiki_nginx']['mediawiki']['localsettings']['wgImageMagickConvertCommand'] %>";

# InstantCommons allows wiki to use images from http://commons.wikimedia.org
$wgUseInstantCommons  = <%= node['bonusbits_mediawiki_nginx']['mediawiki']['localsettings']['wgUseInstantCommons'] %>;

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale
$wgShellLocale = "en_US.utf8";

## If you want to use image uploads under safe mode,
## create the directories images/archive, images/thumb and
## images/temp, and make them all writable. Then uncomment
## this, if it's not already uncommented:
$wgHashedUploadDirectory = <%= node['bonusbits_mediawiki_nginx']['mediawiki']['localsettings']['wgHashedUploadDirectory'] %>;

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publically accessible from the web.
#$wgCacheDirectory = "$IP/cache";

# Site language code, should be one of the list in ./languages/Names.php
$wgLanguageCode = "en";

$wgSecretKey = "<%= node.run_state['passwords']['wiki']['wgSecretKey'] %>";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "<%= node.run_state['passwords']['wiki']['wgUpgradeKey'] %>";

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'standard', 'nostalgia', 'cologneblue', 'monobook', 'vector':
$wgDefaultSkin = "<%= node['bonusbits_mediawiki_nginx']['mediawiki']['localsettings']['wgDefaultSkin'] %>";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl  = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

# Query string length limit for ResourceLoader. You should only set this if
# your web server has a query string length limit (then set it to that limit),
# or if you have suhosin.get.max_value_length set in php.ini (then set it to
# that value)
$wgResourceLoaderMaxQueryLength = -1;

# End of automatically generated settings.
# Add more configuration options below.

<%= node['bonusbits_mediawiki_nginx']['mediawiki']['localsettings']['wgFavicon'] %>
<%= node['bonusbits_mediawiki_nginx']['mediawiki']['localsettings']['skins'] %>
<%= node['bonusbits_mediawiki_nginx']['mediawiki']['localsettings']['stock_extensions'] %>
<%= node['bonusbits_mediawiki_nginx']['mediawiki']['localsettings']['custom_settings'] %>
<%= node['bonusbits_mediawiki_nginx']['mediawiki']['localsettings']['extensions'] %>

?>